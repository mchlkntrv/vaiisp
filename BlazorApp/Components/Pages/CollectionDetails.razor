@page "/collections/{CollectionId:int}"
@inject CollectionService CollectionService
@inject MineralService MineralService
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Detaily kolekcie</PageTitle>

<main class="container my-5">
    <h2 class="text-center mb-4">@collectionName</h2>

    <button class="btn btn-primary mb-4" @onclick="ShowAddMineralModal">Pridať minerál</button>

    @if (!collectionItems.Any())
    {
        <p>Táto kolekcia neobsahuje zatiaľ žiadne minerály.</p>
    }
    else
    {
        <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4">
            @foreach (var item in collectionItems)
            {
                <div class="col mb-4">
                    <div class="card d-flex flex-column" style="max-width: 18rem; height: 100%;">
                        <img src="@($"/images/{item.Mineral.Name}.jpg")" class="card-img-top" alt="@item.Mineral.Name" style="height: 180px; object-fit: cover;" />
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title">@item.Mineral.Name</h5>
                            <p class="card-text flex-grow-1">@item.UserDescription</p> 
                            <p><strong>Množstvo:</strong> @item.Quantity</p>
                            <button class="btn btn-link p-0" @onclick="() => RemoveMineral(item.Id)">
                                <i class="fa fa-trash-alt text-danger"></i> 
                            </button>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    @if (isAddMineralModalVisible)
    {
        <div class="modal fade show" tabindex="-1" style="display:block" aria-labelledby="addMineralModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMineralModalLabel">Pridať minerál do kolekcie</h5>
                        <button type="button" class="btn-close" @onclick="HideAddMineralModal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="mineralSelect">Vyberte minerál:</label>
                            <select id="mineralSelect" class="form-control" @bind="selectedMineralId">
                                <option value="">-- Vyberte minerál --</option>
                                @foreach (var mineral in availableMinerals)
                                {
                                    <option value="@mineral.Id">@mineral.Name</option>
                                }
                            </select>
                        </div>
                        <div class="form-group mt-2">
                            <label for="customDescription">Popis</label>
                            <input id="customDescription" class="form-control" @bind="customDescription" placeholder="Pridajte vlastný popis" />
                        </div>
                        <div class="form-group mt-2">
                            <label for="quantity">Množstvo</label>
                            <input type="number" id="quantity" class="form-control" @bind="quantity" min="1" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="HideAddMineralModal">Zavrieť</button>
                        <button type="button" class="btn btn-primary" @onclick="AddMineral">Pridať</button>
                    </div>
                </div>
            </div>
        </div>
    }

    @if (errorMessage != null)
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }
    else if (successMessage != null)
    {
        <div class="alert alert-success mt-3">
            @successMessage
        </div>
    }
</main>

@code {
    [Parameter] public int CollectionId { get; set; }
    private string collectionName = "";
    private List<CollectionItem> collectionItems = new();
    private List<Mineral> availableMinerals = new();
    private int? selectedMineralId;
    private string customDescription = "";
    private int quantity = 1;
    private bool isAddMineralModalVisible = false;
    private string? errorMessage;
    private string? successMessage;

    protected override async Task OnInitializedAsync()
    {
        var collection = await CollectionService.GetCollectionByIdAsync(CollectionId);
        if (collection != null)
        {
            collectionName = collection.Title;
            collectionItems = await CollectionService.GetCollectionItemsAsync(CollectionId);
        }

        availableMinerals = await MineralService.GetMineralsAsync();
    }

    private async Task AddMineral()
    {
        if (selectedMineralId == null)
        {
            errorMessage = "Prosím, vyberte minerál.";
            successMessage = null;
            StateHasChanged();
            return;
        }

        var newCollectionItem = new CollectionItem
            {
                CollectionId = CollectionId,
                MineralId = selectedMineralId.Value,
                UserDescription = customDescription,
                Quantity = quantity,
                AddedAt = DateTime.Now
            };

        var success = await CollectionService.AddCollectionItemAsync(newCollectionItem);

        if (success)
        {
            collectionItems = await CollectionService.GetCollectionItemsAsync(CollectionId);
            successMessage = "Minerál bol úspešne pridaný do kolekcie.";
            errorMessage = null;
            HideAddMineralModal();
            StateHasChanged();
        }
        else
        {
            errorMessage = "Nepodarilo sa pridať minerál.";
            successMessage = null;
            StateHasChanged();
        }
    }

    private async Task RemoveMineral(int collectionItemId)
    {
        var success = await CollectionService.RemoveCollectionItemAsync(collectionItemId);

        if (success)
        {
            collectionItems = await CollectionService.GetCollectionItemsAsync(CollectionId);
            successMessage = "Minerál bol úspešne odstránený z kolekcie.";
            errorMessage = null;
            StateHasChanged();
        }
        else
        {
            errorMessage = "Nepodarilo sa odstrániť minerál.";
            successMessage = null;
            StateHasChanged();
        }
    }

    private void ShowAddMineralModal()
    {
        isAddMineralModalVisible = true;
    }

    private void HideAddMineralModal()
    {
        isAddMineralModalVisible = false;
    }
}
