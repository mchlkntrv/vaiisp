@page "/mineral/{MineralId:int}"
@inject MineralService MineralService
@inject CommentService CommentService
@inject AuthService AuthService
@inject UserService UserService
@rendermode InteractiveServer

<PageTitle>Minerál - @mineral?.Name</PageTitle>

<main class="container my-5">
    @if (mineral == null)
    {
        <p>Načítavam informácie o mineráli...</p>
    }
    else
    {
        <h2 class="text-center mb-4">@mineral.Name</h2>
        <div class="row">
            <div class="col-12 mb-4 d-flex">
                <div class="card flex-fill">
                    <div class="card-body d-flex flex-column">
                        <div id="mineralCarousel" class="carousel slide carousel-fade mineral-info-carousel"
                             data-bs-ride="carousel">
                            <div class="carousel-inner">
                                @for (int i = 1; i <= MaxImageCount; i++)
                                {
                                    string imagePath = $"images/carousels/{mineral.Name}{i}.jpg";

                                    <div class="carousel-item @(i == 1 ? "active" : "")">
                                        <img src="@imagePath" class="d-block w-100" alt="@mineral.Name">
                                    </div>
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#mineralCarousel"
                                    data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#mineralCarousel"
                                    data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>


                        <h5 class="card-title font-weight-bold d-flex justify-content-between align-items-center mt-3">
                            @mineral.Name
                        </h5>
                        <p class="no-margin"> Chemický vzorec: </p>
                        <p class="mineral-card-formula">@mineral.Formula</p>

                        <ul class="nav nav-tabs mt-3" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-bs-toggle="tab" href="#description" role="tab">Popis</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#locations" role="tab">Lokality</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-bs-toggle="tab" href="#properties" role="tab">Vlastnosti</a>
                            </li>
                        </ul>

                        <div class="tab-content mt-3">
                            <div id="description" class="tab-pane fade show active" role="tabpanel">
                                <p>@mineral.Information</p>
                            </div>
                            <div id="locations" class="tab-pane fade" role="tabpanel">
                                <p>@mineral.Locations</p>
                            </div>
                            <div id="properties" class="tab-pane fade" role="tabpanel">
                                <p>@mineral.Properties</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <section class="comments-section mt-4">
            <h3>Komentáre</h3>

            @if (comments == null)
            {
                <p>Načítavam komentáre...</p>
            }
            else if (!comments.Any())
            {
                <p>Žiadne komentáre zatiaľ neboli pridané.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var comment in comments)
                    {
                        <li class="list-group-item">
                            <p><strong>@comment.Username:</strong> @comment.Text</p>
                            <small class="text-muted">@comment.CreatedAt.ToString("dd.MM.yyyy HH:mm")</small>

                            @if (isUserAuthenticated && (comment.UserId == loggedInUserId || isUserAdmin))
                            {
                                <i class="fa fa-trash text-danger cursor-pointer m-1" @onclick="() => DeleteComment(comment.Id, comment.UserId)" title="Zmazať komentár"></i>
                            }
                        </li>
                    }

                </ul>
            }

            @if (isUserAuthenticated)
            {
                <div class="mt-3">
                    <h5>Pridať komentár:</h5>
                    <textarea class="form-control" @bind="newCommentText" rows="3"></textarea>
                    <button class="btn btn-primary mt-2" @onclick="SubmitComment">Odoslať</button>
                </div>
            }
            else
            {
                <p class="text-muted mt-3">Na pridanie komentára sa musíte prihlásiť.</p>
            }
        </section>

    }
</main>

@code {
    [Parameter] public int MineralId { get; set; }
    private Mineral? mineral;
    private List<Comment> comments = new();
    private string newCommentText = "";
    private bool isUserAuthenticated = false;
    private int? loggedInUserId;
    private int MaxImageCount = 0;
    private bool isUserAdmin = false;

    protected override async Task OnInitializedAsync()
    {

        mineral = await MineralService.GetMineralByIdAsync(MineralId);

        var files = Directory.GetFiles(Path.Combine("wwwroot/images/carousels"), $"{mineral.Name}*.jpg");
        MaxImageCount = files.Length;
        await LoadComments();
        await CheckUserAuthentication();
        isUserAdmin = await UserService.IsUserAdminAsync();
    }

    private async Task LoadComments()
    {
        comments = await CommentService.GetCommentsByMineralIdAsync(MineralId);
    }

    private async Task CheckUserAuthentication()
    {
        loggedInUserId = await AuthService.GetUserIdAsync();
        isUserAuthenticated = loggedInUserId != null;
    }

    private async Task SubmitComment()
    {
        if (string.IsNullOrWhiteSpace(newCommentText) || loggedInUserId == null)
            return;

        var newComment = new Comment
            {
                MineralId = MineralId,
                UserId = loggedInUserId.Value,
                Text = newCommentText,
                CreatedAt = DateTime.Now
            };

        await CommentService.AddCommentAsync(newComment);
        newCommentText = "";
        await LoadComments();
    }

    private async Task DeleteComment(int commentId, int userId)
    {
        if (loggedInUserId == userId || isUserAdmin)
        {
            await CommentService.DeleteCommentAsync(commentId);
            await LoadComments();  
        }
    }

}
