@page "/encyclopedia"
@inject MineralService MineralService
@inject UserService UserService
@inject CollectionService CollectionService
@inject AuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Encyklopédia minerálov</PageTitle>

<main class="container my-4">
    <h2 class="text-center mb-4">Encyklopédia Minerálov</h2>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center">
            <button class="btn btn-secondary me-2" @onclick="ToggleSort">
                <i class="fa-solid fa-arrow-up-a-z" title="Zoradiť"></i>
            </button>
            <span>@sortLabel</span>
        </div>
        @if (isAdmin)
        {
            <a class="btn btn-primary" href="/add-mineral">Pridať nový minerál</a>
        }
    </div>

    @if (minerals == null)
    {
        <p>Načítava sa...</p>
    }
    else
    {
        <div class="row">
            @foreach (var mineral in minerals)
            {
                <div class="col-sm-6 col-md-6 col-lg-3 mb-4 d-flex">
                    <div class="card mineral-card flex-fill">
                        <div class="card-body d-flex flex-column">
                            <img src="@($"images/{mineral.Name}.jpg")" class="card-img-top" alt="@mineral.Name">
                            <h5 class="card-title font-weight-bold d-flex justify-content-between align-items-center">
                                @mineral.Name
                                <span>
                                    <i class="fa-solid fa-plus" title="Pridať do kolekcie" @onclick="() => ShowCollectionModal(mineral.Id)"></i>
                                </span>
                            </h5>
                            <p style="margin: 0;"> Chemický vzorec: </p>
                            <p class="mineral-card-formula">@mineral.Formula</p>
                            <p class="card-text">@mineral.Information</p>
                            <a href="@($"/mineral/{mineral.Id}")" class="mineral-card-link mt-auto">Prečítať si viac...</a>
                        </div>
                        @if (isAdmin)
                        {
                            <div class="card-footer d-flex justify-content-between">
                                <button class="btn btn-sm btn-warning" @onclick="() => EditMineral(mineral.Id)">Upraviť</button>
                                <button class="btn btn-sm btn-danger" @onclick="() => DeleteMineral(mineral.Id)">Odstrániť</button>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</main>

@if (showCollectionModal)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Pridať do kolekcie</h5>
                    <button type="button" class="close" @onclick="CloseCollectionModal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p>Vyberte kolekciu:</p>
                    <ul class="list-group">
                        @foreach (var collection in userCollections)
                        {
                            <li class="list-group-item list-group-item-action" @onclick="() => SelectCollection(collection.Id)">
                                @collection.Title
                            </li>
                        }
                    </ul>
                    <div class="form-group mt-3">
                        <label for="quantity">Množstvo</label>
                        <input type="number" class="form-control" id="quantity" @bind="quantity" min="1" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseCollectionModal">Zavrieť</button>
                    <button type="button" class="btn btn-primary" @onclick="AddToCollection">Pridať</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    private List<Mineral>? minerals;
    private List<Collection> userCollections = new List<Collection>();
    private bool isAdmin = true;
    private bool isAscending = false;
    private string sortLabel = "Abecedne (A-Z)";
    private bool showCollectionModal = false;
    private int selectedMineralId;
    private int selectedCollectionId;
    private int quantity = 1;

    protected override async Task OnInitializedAsync()
    {
        isAdmin = await UserService.IsUserAdminAsync();
        minerals = await MineralService.GetMineralsAsync();
        var userId = await AuthService.GetUserIdAsync();
        if (userId.HasValue)
        {
            userCollections = await CollectionService.GetCollectionsByUserIdAsync(userId.Value);
        }
    }

    private async Task DeleteMineral(int id)
    {
        var success = await MineralService.DeleteMineralAsync(id);
        if (success)
        {
            minerals = await MineralService.GetMineralsAsync();
        }
    }

    private void EditMineral(int id)
    {
        Navigation.NavigateTo($"/edit-mineral/{id}");
    }

    private void ToggleSort()
    {
        if (isAscending)
        {
            minerals = minerals?.OrderByDescending(m => m.Name).ToList();
            sortLabel = "Abecedne (Z-A)";
        }
        else
        {
            minerals = minerals?.OrderBy(m => m.Name).ToList();
            sortLabel = "Abecedne (A-Z)";
        }

        isAscending = !isAscending;
    }

    private void ShowCollectionModal(int mineralId)
    {
        selectedMineralId = mineralId;
        showCollectionModal = true;
    }

    private void CloseCollectionModal()
    {
        showCollectionModal = false;
    }

    private void SelectCollection(int collectionId)
    {
        selectedCollectionId = collectionId;
    }

    private async Task AddToCollection()
    {
        if (selectedCollectionId > 0 && quantity > 0)
        {
            var collectionItem = new CollectionItem
                {
                    CollectionId = selectedCollectionId,
                    MineralId = selectedMineralId,
                    Quantity = quantity
                };
            await CollectionService.AddCollectionItemAsync(collectionItem);
            CloseCollectionModal();
        }
    }
}