@page "/collections"
@inject CollectionService CollectionService
@inject NavigationManager Navigation
@inject AuthService AuthService
@rendermode InteractiveServer

<PageTitle>Kolekcie</PageTitle>

<main class="container my-5">
    <h2 class="text-center mb-4">Moje Kolekcie</h2>

    @if (IsLoading)
    {
        <p>Načítava sa...</p>
    }
    else if (UserCollections == null)
    {
        <p>Nemáte žiadne kolekcie.</p>

        <div class="mt-4">
            <button class="btn btn-primary" @onclick="NavigateToLoginPage">Prihlásiť sa</button>
        </div>
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <button class="btn btn-primary" data-bs-toggle="collapse" aria-pressed="true">
                <i class="fas fa-plus" title="Pridať novú kolekciu"></i>
            </button>
        </div>

        <div class="row">
            @foreach (var collection in UserCollections)
            {
                <div class="col-12 mb-3">
                    <div class="card">
                        <div class="d-flex p-3">
                            <img src="images/collections/@($"{collection.Id}.jpg")" alt="Náhľad kolekcie" class="img-fluid me-3"
                                 style="width: 15vh; object-fit: contain;">
                            <div class="flex-grow-1">
                                <h5 class="card-title">
                                    @if (editingCollectionId == collection.Id)
                                    {
                                        <input type="text" @bind="editingCollectionTitle" class="form-control" />
                                    }
                                    else
                                    {
                                        @collection.Title
                                    }
                                </h5>
                                <p class="card-text">
                                    @if (editingCollectionId == collection.Id)
                                    {
                                        <textarea @bind="editingCollectionDescription" class="form-control"></textarea>
                                    }
                                    else
                                    {
                                        @collection.Description
                                    }
                                </p>
                                <p class="text-muted">Vytvorené: @collection.CreatedAt.ToString("dd.MM.yyyy")</p>

                                <div class="d-flex justify-content-end">
                                    @if (editingCollectionId == collection.Id)
                                    {
                                        <button class="btn btn-success" @onclick="SaveCollectionEdit">Uložiť</button>
                                        <button class="btn btn-secondary ms-2" @onclick="CancelEdit">Zrušiť</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-warning" @onclick="() => StartEditing(collection)">Upravit</button>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</main>

@code {
    private List<Collection> UserCollections;
    private bool IsLoading = true;

    private int? editingCollectionId;
    private string editingCollectionTitle;
    private string editingCollectionDescription;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var userId = await AuthService.GetUserIdAsync();

            if (userId.HasValue)
            {
                UserCollections = await CollectionService.GetCollectionsByUserIdAsync(userId.Value);
            }
            else
            {
                UserCollections = null;
            }
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error: {ex.Message}");
            UserCollections = null;
        }
        finally
        {
            IsLoading = false;
            StateHasChanged(); 
        }
    }

    private void NavigateToLoginPage()
    {
        Navigation.NavigateTo("/login");
    }

    private void StartEditing(Collection collection)
    {
        editingCollectionId = collection.Id;
        editingCollectionTitle = collection.Title;
        editingCollectionDescription = collection.Description;
    }

    private async Task SaveCollectionEdit()
    {
        if (editingCollectionId.HasValue)
        {
            var updatedCollection = UserCollections.FirstOrDefault(c => c.Id == editingCollectionId);

            if (updatedCollection != null)
            {
                updatedCollection.Title = editingCollectionTitle;
                updatedCollection.Description = editingCollectionDescription;

                var success = await CollectionService.UpdateCollectionAsync(updatedCollection);

                if (success)
                {
                    editingCollectionId = null;
                    StateHasChanged();
                }
            }
        }
    }

    private void CancelEdit()
    {
        editingCollectionId = null;
    }
}
