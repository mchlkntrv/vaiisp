@page "/add-mineral"
@inject MineralService MineralService
@inject NavigationManager Navigation
@inject IWebHostEnvironment WebHostEnvironment

@rendermode InteractiveServer

<PageTitle>Pridať Minerál</PageTitle>

<div class="container my-4">
    <h2 class="text-center mb-4">Pridať Minerál</h2>

    <EditForm Model="@mineral" OnValidSubmit="HandleSubmit" FormName="AddMineralForm">
        <DataAnnotationsValidator />

        <div class="form-group mb-3">
            <label for="name" class="form-label">Názov minerálu</label>
            <InputText id="name" class="form-control" @bind-Value="mineral.Name" />
            <ValidationMessage For="@(() => mineral.Name)" />
        </div>

        <div class="form-group mb-3">
            <label for="formula" class="form-label">Chemický vzorec</label>
            <InputText id="formula" class="form-control" @bind-Value="mineral.Formula" />
            <ValidationMessage For="@(() => mineral.Formula)" />
        </div>

        <div class="form-group mb-3">
            <label for="information" class="form-label">Informácie</label>
            <InputTextArea id="information" class="form-control" @bind-Value="mineral.Information" />
            <ValidationMessage For="@(() => mineral.Information)" />
        </div>

        <div class="form-group mb-3">
            <label for="locations" class="form-label">Lokality</label>
            <InputText id="locations" class="form-control" @bind-Value="mineral.Locations" />
            <ValidationMessage For="@(() => mineral.Locations)" />
        </div>

        <div class="form-group mb-3">
            <label for="properties" class="form-label">Vlastnosti</label>
            <InputTextArea id="properties" class="form-control" @bind-Value="mineral.Properties" />
            <ValidationMessage For="@(() => mineral.Properties)" />
        </div>

        <div class="form-group mb-3">
            <label for="image" class="form-label">Obrázok minerálu</label>
            <InputFile id="image" class="form-control" OnChange="HandleImageUpload" />
            @if (isImageTooLarge)
            {
                <div class="alert alert-danger mt-2">
                    Obrázok je príliš veľký! Maximálna povolená veľkosť je 500 KB.
                </div>
            }
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-2">
                    @errorMessage
                </div>
            }
        </div>

        <button type="submit" class="btn btn-primary">Pridať minerál</button>
    </EditForm>

    @if (submissionFailed)
    {
        <div class="alert alert-danger mt-3">
            Nepodarilo sa pridať minerál. Skúste to znova.
        </div>
    }
    else if (submissionSucceeded)
    {
        <div class="alert alert-success mt-3">
            Minerál bol úspešne pridaný.
        </div>
    }
</div>

@code {
    private Mineral mineral = new();
    private bool submissionFailed = false;
    private bool submissionSucceeded = false;
    private bool isImageTooLarge = false;
    private string? errorMessage;
    private const long MaxImageSize = 500 * 1024;
    private IBrowserFile? uploadedImage;

    private async Task HandleSubmit()
    {
        submissionFailed = false;
        submissionSucceeded = false;

        if (uploadedImage == null)
        {
            errorMessage = "Obrázok je povinný.";
            return;
        }

        if (uploadedImage.Size > MaxImageSize)
        {
            isImageTooLarge = true;
            return;
        }

        isImageTooLarge = false;

        var fileNameWithoutNumber = $"{mineral.Name}.jpg";
        var fileNameWithNumber = $"{mineral.Name}1.jpg";

        var mineralsPath = Path.Combine(WebHostEnvironment.WebRootPath, "images", "minerals");
        var carouselPath = Path.Combine(WebHostEnvironment.WebRootPath, "images", "carousels");

        if (!Directory.Exists(mineralsPath))
        {
            Directory.CreateDirectory(mineralsPath);
        }

        if (!Directory.Exists(carouselPath))
        {
            Directory.CreateDirectory(carouselPath);
        }

        try
        {
            var mineralsFilePath = Path.Combine(mineralsPath, fileNameWithoutNumber);
            await using var mineralsFileStream = new FileStream(mineralsFilePath, FileMode.Create);
            await uploadedImage.OpenReadStream().CopyToAsync(mineralsFileStream);

            var carouselFilePath = Path.Combine(carouselPath, fileNameWithNumber);
            await using var carouselFileStream = new FileStream(carouselFilePath, FileMode.Create);
            await uploadedImage.OpenReadStream().CopyToAsync(carouselFileStream);
        }
        catch (Exception ex)
        {
            errorMessage = $"Chyba pri ukladaní obrázka: {ex.Message}";
            return;
        }

        var wasAdded = await MineralService.AddMineralAsync(mineral);

        if (wasAdded)
        {
            submissionSucceeded = true;
            Navigation.NavigateTo($"/encyclopedia");

        }
        else
        {
            submissionFailed = true;
        }
    }

    private void HandleImageUpload(InputFileChangeEventArgs e)
    {
        uploadedImage = e.File;

        if (uploadedImage != null && uploadedImage.Size > MaxImageSize)
        {
            isImageTooLarge = true;
        }
        else
        {
            isImageTooLarge = false;
        }
    }
}
