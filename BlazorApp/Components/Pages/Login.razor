@page "/login"

@inject AuthService AuthService
@inject NavigationManager Navigation


<PageTitle>Login</PageTitle>

<main class="container my-5">
    <h2 class="text-center mb-4">Prihláste sa do svojho účtu</h2>

    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin" FormName="loginForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group my-2">
            <label for="usernameOrEmail">Používateľské meno alebo e-mail</label>
            <InputText id="usernameOrEmail" class="form-control" @bind-Value="loginModel.UsernameOrEmail" />
        </div>

        <div class="form-group my-2">
            <label for="password">Heslo</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        </div>

        <button type="submit" class="btn btn-primary my-4" disabled="@isLoading">Prihlásiť sa</button>
    </EditForm>

    @if (isLoginFailed)
    {
        <div class="alert alert-danger mt-3">
            Nesprávne používateľske meno/email alebo heslo.
        </div>
    }

    @if (isLoading)
    {
        <div class="text-center mt-3">
            <div class="spinner-border" role="status">
                <span class="sr-only">Načítava sa...</span>
            </div>
        </div>
    }
</main>

@code {
    [SupplyParameterFromForm]
    private LoginModel? loginModel { get; set; }
    protected override void OnInitialized() => loginModel ??= new();

    private bool isLoginFailed = false;
    private bool isLoading = false;
    private int? userIdToSet;

    private async Task HandleLogin()
    {
        var isLoggedIn = await AuthService.LoginAsync(loginModel);

        if (isLoggedIn)
        {
            Navigation.NavigateTo("/collections");
        }
        else
        {
            isLoginFailed = true;
        }
    }
}
